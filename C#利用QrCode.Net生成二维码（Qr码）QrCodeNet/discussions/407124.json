[
  {
    "Id": "957510",
    "ThreadId": "407124",
    "Html": "\r\n<p>We need to store non-character data in QR-code for internal use. Possible few kB.</p>\r\n<p>Is it possible to make QrCode.NET version which will accept row byte[] as input but not only a string? Or does this not supported by QR-Code standard (I'm newbie about QR-codes)?</p>\r\n<p>In source codes EncodingName and Gma.QrCodeNet.Encoding.DataEncodation.Mode are used quite often so I'm afraid to make errors during modification...</p>\r\n",
    "PostedDate": "2012-12-18T02:48:00.17-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "958136",
    "ThreadId": "407124",
    "Html": "\r\n<p>In short. QrCode does not support byte[] input. As far as according to ISO. It is totally char based.</p>\r\n<p><span style=\"font-size:10pt\">Even though we do convert char to byte array according to char table, but if you check any char table, most them contain non solve able special char. Decoder will always assume income byte as part of char table, and turn it into\r\n question mark if non solve able.&nbsp;</span></p>\r\n<p>If you have total control of decoder, then its possible. Grab byte[] before decoder turn into char. That means you have to have a QrCode decoder that's under your demand. That's not easy. Especially for paid solution. If you want to do that, you can. Put\r\n some time on ZXing's decoder, and break it down. Grab byte array before char decode.&nbsp;</p>\r\n<p>Same at encode side, ignore char encode, just put in byte array. That's what I want to do at later stage, I don't have time set up yet as been busy recently. For this project to include decoder will take longer than optimize current encoder.&nbsp;</p>\r\n<p>If you can get decoder going, I can help you with encoder.</p>\r\n<p>QrCode specification is under our home page. You can download and give it a quick read for DataEncodation.</p>\r\n",
    "PostedDate": "2012-12-18T22:31:52.38-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "958198",
    "ThreadId": "407124",
    "Html": "\r\n<p>Thanks for quick reply.</p>\r\n<p>As Decoder we use MS POS for .NET library with real 2D-scanner. POS for .NET &quot;produce&quot; byte[]. Does it check about readable range - don't know exactly but on first look - no.</p>\r\n<p>So would you recommend to modify your library with ignoring of Encoding etc. to encode row bytes? I see place in sources where byte[] is generated by string but later after that place Encoding and Mode still are used... So i afraid that ignoring of it may\r\n cause problems in correct Matrix generation...</p>\r\n",
    "PostedDate": "2012-12-19T01:14:38.603-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "959480",
    "ThreadId": "407124",
    "Html": "\r\n<p>If you are not in hurry. I might be able to take look at this weekend.&nbsp;</p>\r\n<p>Output byte array sounds good, but it's also&nbsp;dangerous. If you have time, take look at ISO's documentation about what stored inside main data.</p>\r\n<p><span style=\"font-size:10pt\">From what I remember, head of data will be data encodation's information, size of QrCode, and that header's length is determined by Size. Then it will have fill out data, after all of that, you have a huge block of error correction\r\n data. If you don't have any knowledge towards that, you will fail on extracting correct data.\r\n</span></p>\r\n<p><span style=\"font-size:10pt\">Unless, MS POS did that for you, extract correct byte array from data and pass to you before decode through char table. The data you want is right before char table decode. This is really important. Else you will have to filter\r\n out those bits or bytes to find out real data. A lot of them are dynamic, its not fixed position. &nbsp;</span></p>\r\n",
    "PostedDate": "2012-12-19T22:03:33.873-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "960224",
    "ThreadId": "407124",
    "Html": "\r\n<p>I'm not in harry.</p>\r\n<p>Currently we wrap bytes in string and all work. It would be good if you will look at this but its ok if you will do it in new year: I think you have another tasks just before Christmass ;)</p>\r\n<p>About POS - it give decoded bytes (as we encode in QRCode.NET) plus 3 fixed bytes (don't know what is it - just ignoring now). I'm not sure: are this bytes result of char table decoding or not :( If it is chars decoding result then why byte[] but not string?\r\n I will take more deep look in it and in ISO standard.</p>\r\n<p>In any cases thanks for great library.</p>\r\n",
    "PostedDate": "2012-12-20T00:53:52.157-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "965674",
    "ThreadId": "407124",
    "Html": "\r\n<p>3 fixed bytes sounds&nbsp;definitely like the header that indicate which data encodation used. If you could post that 3 fixed bytes here as bit, like 011011 etc. I can probably figure out what it is.&nbsp;</p>\r\n<p><span style=\"font-size:10pt\">What do you mean by wrap bytes in string?</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:10pt\">Oh well. Was going to give this project some love during holiday anyway. Left it in wild for more than half year. Hope I still remember what I did last year. XD</span></p>\r\n",
    "PostedDate": "2012-12-20T23:15:03.237-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "983405",
    "ThreadId": "407124",
    "Html": "\r\n<p>Just commit a change set for byte array encode.&nbsp;</p>\r\n<p>Let me know if your decode tool can proper extract that byte array.&nbsp;</p>\r\n",
    "PostedDate": "2013-01-05T15:58:37.967-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987530",
    "ThreadId": "407124",
    "Html": "\r\n<p>Just have tested with few readers: byte array encoding work in wrong way.</p>\r\n<p>Code from your samples can't be decoded by our scanners. And our own code was decoded as only first byte from array.</p>\r\n",
    "PostedDate": "2013-01-16T04:42:40.913-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987540",
    "ThreadId": "407124",
    "Html": "\r\n<p>Seems in DataEncode.Encode(IEnumerable&lt;byte&gt; content, ErrorCorrectionLevel eclevel) next string cause problems:</p>\r\n<p></p>\r\n<pre>            BitList encodeContent = new BitList(content);</pre>\r\n<p></p>\r\n<p>this BitList constructor seems work in incorrect way: length of bit list set to length of byte array.</p>\r\n<p>I'm not fully anderstand what should be there instead... :( So can't correct myself.</p>\r\n",
    "PostedDate": "2013-01-16T04:58:27.153-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987547",
    "ThreadId": "407124",
    "Html": "\r\n<p>To get expected (for us) behaviour we have changed this string to next one:<br>\r\n</p>\r\n<pre>            BitList encodeContent = EightBitByteEncoder.GetDataBitsByByteArray(content.ToArray(), QRCodeConstantVariable.DefaultEncoding);\r\n</pre>\r\n<p></p>\r\n",
    "PostedDate": "2013-01-16T05:16:49.83-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "987680",
    "ThreadId": "407124",
    "Html": "\r\n<p>Pain to work on something that you don't know what's inside. Just like a black box with full of mysteries.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Could you just decode a normal QrCode, and let me know your input string for that code. Also after decode what byte array you got. That will be easier to figure out.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Also for that normal QrCode, use our encoder to encode, so at least I know how to reproduce it again.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>Also you don't have to test with any reader, because it will never work. Only reader that can output byte array before transfer to normal char can decode it. If your POV decoder is give you byte array after transfer to normal char then you better give up.\r\n That means that POV doesn't support byte array at ALL. It just doing dumb translation at end of normal decode. Not give you proper byte array in the middle of process.&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>The only way to get byte array is cut off normal decode line and grab information from middle.&nbsp;</p>\r\n",
    "PostedDate": "2013-01-16T09:36:40.093-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]